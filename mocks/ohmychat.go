// Code generated by MockGen. DO NOT EDIT.
// Source: ohmychat.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	ohmychat "github.com/guiflemes/ohmychat"
)

// MockEngine is a mock of Engine interface.
type MockEngine struct {
	ctrl     *gomock.Controller
	recorder *MockEngineMockRecorder
}

// MockEngineMockRecorder is the mock recorder for MockEngine.
type MockEngineMockRecorder struct {
	mock *MockEngine
}

// NewMockEngine creates a new mock instance.
func NewMockEngine(ctrl *gomock.Controller) *MockEngine {
	mock := &MockEngine{ctrl: ctrl}
	mock.recorder = &MockEngineMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEngine) EXPECT() *MockEngineMockRecorder {
	return m.recorder
}

// HandleMessage mocks base method.
func (m *MockEngine) HandleMessage(arg0 *ohmychat.Context, arg1 *ohmychat.Message) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "HandleMessage", arg0, arg1)
}

// HandleMessage indicates an expected call of HandleMessage.
func (mr *MockEngineMockRecorder) HandleMessage(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleMessage", reflect.TypeOf((*MockEngine)(nil).HandleMessage), arg0, arg1)
}
